/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.formatting2;

import com.google.inject.Inject;
import ecoreModelProject.Search;
import ecoreModelProject.Specification;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

@SuppressWarnings("all")
public class MyDslFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private MyDslGrammarAccess _myDslGrammarAccess;
  
  protected void _format(final Search search, @Extension final IFormattableDocument document) {
    EList<Specification> _specifications = search.getSpecifications();
    for (final Specification specification : _specifications) {
      document.<Specification>format(specification);
    }
  }
  
  public void format(final Object search, final IFormattableDocument document) {
    if (search instanceof XtextResource) {
      _format((XtextResource)search, document);
      return;
    } else if (search instanceof Search) {
      _format((Search)search, document);
      return;
    } else if (search instanceof EObject) {
      _format((EObject)search, document);
      return;
    } else if (search == null) {
      _format((Void)null, document);
      return;
    } else if (search != null) {
      _format(search, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(search, document).toString());
    }
  }
}
