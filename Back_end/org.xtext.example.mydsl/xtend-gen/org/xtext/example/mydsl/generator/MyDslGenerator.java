/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator;

import ecoreModelProject.Search;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package com.javacodegeeks.snippets.enterprise.embedded_jetty_example;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import org.eclipse.jetty.server.Server;");
    _builder.newLine();
    _builder.append("import org.eclipse.jetty.servlet.ServletContextHandler;");
    _builder.newLine();
    _builder.append("import com.javacodegeeks.snippets.enterprise.embeddedjetty.servlet.ExampleServlet;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class EmbeddedJettyMain {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main(String[] args) throws Exception {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Server server = new Server(7071);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("ServletContextHandler handler = new ServletContextHandler(server, \"/example\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("handler.addServlet(ExampleServlet.class, \"/\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("server.start();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    fsa.generateFile("EmbededJettyMain.java", _builder);
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<modelVersion>4.0.0</modelVersion>");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<groupId>com.javacodegeeks.snippets.enterprise</groupId>");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<artifactId>embedded-jetty-example</artifactId>");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<version>0.0.1-SNAPSHOT</version>");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<packaging>jar</packaging>");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<name>embedded-jetty-example</name>");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<url>http://maven.apache.org</url>");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<properties>");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("</properties>");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("<dependencies>");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<!--Jetty dependencies start here -->");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<dependency>");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("<groupId>org.eclipse.jetty</groupId>");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("<artifactId>jetty-server</artifactId>");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("<version>9.2.11.v20150529</version>");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("</dependency>");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<dependency>");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("<groupId>org.eclipse.jetty</groupId>");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("<artifactId>jetty-servlet</artifactId>");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("<version>9.2.11.v20150529</version>");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("</dependency>");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<!--Jetty dependencies end here -->");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<!--Json dependencies end here -->");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("<dependency>");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("<groupId>com.googlecode.json-simple</groupId>");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("<artifactId>json-simple</artifactId>");
    _builder_1.newLine();
    _builder_1.append("            ");
    _builder_1.append("<version>1.1.1</version>");
    _builder_1.newLine();
    _builder_1.append("        ");
    _builder_1.append("</dependency>");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("</dependencies>");
    _builder_1.newLine();
    _builder_1.append("</project>");
    _builder_1.newLine();
    _builder_1.newLine();
    fsa.generateFile("pom.xml", _builder_1);
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("package com.javacodegeeks.snippets.enterprise.embeddedjetty.servlet;");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("import java.io.IOException;");
    _builder_2.newLine();
    _builder_2.append("import java.io.InputStream;");
    _builder_2.newLine();
    _builder_2.append("import java.net.URL;");
    _builder_2.newLine();
    _builder_2.append("import java.net.URLConnection;");
    _builder_2.newLine();
    _builder_2.append("import java.net.URLEncoder;");
    _builder_2.newLine();
    _builder_2.append("import java.util.ArrayList;");
    _builder_2.newLine();
    _builder_2.append("import java.util.Scanner;");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("import javax.servlet.ServletException;");
    _builder_2.newLine();
    _builder_2.append("import javax.servlet.http.HttpServlet;");
    _builder_2.newLine();
    _builder_2.append("import javax.servlet.http.HttpServletRequest;");
    _builder_2.newLine();
    _builder_2.append("import javax.servlet.http.HttpServletResponse;");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("import org.eclipse.jetty.http.HttpStatus;");
    _builder_2.newLine();
    _builder_2.append("import org.json.simple.JSONArray;");
    _builder_2.newLine();
    _builder_2.append("import org.json.simple.JSONObject;");
    _builder_2.newLine();
    _builder_2.append("import org.json.simple.parser.JSONParser;");
    _builder_2.newLine();
    _builder_2.append("import org.json.simple.parser.ParseException;");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("public class ExempleServlet extends HttpServlet {");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("JSONArray quartiers;");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("ArrayList<String> locations;");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("@Override");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("// creer array json contenant des objets json representant les quartier ");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("quartiers = new JSONArray();");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations = new ArrayList<>();");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.602374,1.441593\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.596903,1.448801\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.597738,1.435150\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.619868,1.433661\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.610050,1.449912\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.619700,1.455617\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.626131,1.469313\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.593949,1.469960\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.570059,1.494183\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.581951,1.449018\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.579400,1.423856\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.557700,1.380513\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.646058,1.411502\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.640628,1.458539\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.641988,1.457152\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.582633,1.410490\");");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("locations.add(\"43.577931,1.401934\");");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("//");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("restaurantRequest();");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("resp.setStatus(HttpStatus.OK_200);");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("resp.getWriter().println(quartiers);");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("public void restaurantRequest() throws IOException {");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("String url = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\";");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("String charset = java.nio.charset.StandardCharsets.UTF_8.name();");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("String radius = \"1000\";");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("String types = \"restaurant\";");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("String name = \"Toulouse\";");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("String key = \"AIzaSyAdSiwtDnpum6aPNFZH7APTTYn-8WAalzA\";");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("// ...");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("for (String location : locations) {");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("String query = String.format(\"location=%s&radius=%s&types=%s&name=%s&key=%s\", location,");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("URLEncoder.encode(radius, charset), URLEncoder.encode(types, charset),");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("URLEncoder.encode(name, charset), URLEncoder.encode(key, charset));");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("URLConnection connection = new URL(url + \"?\" + query).openConnection();");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("connection.setRequestProperty(\"Accept-Charset\", charset);");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("InputStream response = connection.getInputStream();");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("// Recupere la note de chaque resto et la compare avec la note voulue");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("try (Scanner scanner = new Scanner(response)) {");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t");
    _builder_2.append("String responseBody = scanner.useDelimiter(\"\\\\A\").next();");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t");
    _builder_2.append("JSONParser parser = new JSONParser();");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t");
    _builder_2.append("try {");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("JSONObject reponse = (JSONObject) parser.parse(responseBody);");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("JSONArray results = (JSONArray) reponse.get(\"results\");");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("//resp.getWriter().println(\"BWAYAYAYAYA\");");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("float wanted = (float) ");
    EObject _get = resource.getContents().get(0);
    String _arguments = ((Search) _get).getSpecifications().get(0).getArguments();
    _builder_2.append(_arguments, "\t\t\t\t\t");
    _builder_2.append(";");
    _builder_2.newLineIfNotEmpty();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("int numberOk = 0;");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("for (int k = 0; k < results.size(); k++) {");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t\t");
    _builder_2.append("JSONObject resto = (JSONObject) results.get(k);");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t\t");
    _builder_2.append("float note =  Float.parseFloat(resto.get(\"rating\").toString());");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t\t");
    _builder_2.append("if(note >= wanted) {");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t\t\t");
    _builder_2.append("numberOk++;");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("JSONObject quartier = new JSONObject();");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("quartier.put(\"numberRestaurant\", numberOk);");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("quartiers.add(quartier);");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("//resp.getWriter().println(quartier);");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t");
    _builder_2.append("} catch (ParseException e) {");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("// TODO Auto-generated catch block");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t\t");
    _builder_2.append("e.printStackTrace();");
    _builder_2.newLine();
    _builder_2.append("\t\t\t\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("\t\t\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("\t\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("\t");
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.append("}");
    _builder_2.newLine();
    _builder_2.newLine();
    _builder_2.newLine();
    fsa.generateFile("ExampleServlet.java", _builder_2);
    StringConcatenation _builder_3 = new StringConcatenation();
    _builder_3.newLine();
    _builder_3.append("public class Serveur{");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("static public void main(String args[]){");
    _builder_3.newLine();
    _builder_3.append("\t\t");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("}");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("public void run(){");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.append("}");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.newLine();
    _builder_3.append("\t");
    _builder_3.newLine();
    _builder_3.append("}");
    _builder_3.newLine();
    _builder_3.newLine();
    fsa.generateFile("Serveur.java", _builder_3);
    resource.getContents().get(0);
  }
}
