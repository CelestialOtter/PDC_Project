/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import ecoreModelProject.Restaurant
import ecoreModelProject.Specification
import ecoreModelProject.Search

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile('Restaurant.java', '''
		/***
		Restaurant class
		***/
		
		class Restaurant{
			String name
		}
		''')
	
	fsa.generateFile('Serveur.java', '''
		
		public class Serveur{
			static public void main(String args[]){
				
			}
			
			public void run(){
«««				«FOR s : (resource.contents.get(0) as Search).specifications
«««					switch s.type{
«««						case spec.isType("Restaurant") : "methode restaurant"
«««						default : ""
«««					}
«««				»
«««				
«««				«ENDFOR»
			}
			
			
		}
		
	''')
		resource.contents.get(0)
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	}
}
